{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","PhonebookService.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","name","onNameChange","number","onNumberChange","type","Persons","persons","map","person","key","onClick","onDeleteButtonClick","Notification","message","state","className","baseUrl","axios","get","newPerson","post","id","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","undefined","notification","setNotification","notificationHelper","setTimeout","addContact","event","a","preventDefault","personsCopy","isExist","find","p","toLowerCase","window","confirm","PhonebookService","fetchData","response","push","data","useEffect","handleDeletion","displayPersons","trim","filter","indexOf","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAUeA,EARA,SAACC,GACd,OACE,kDACoB,2BAAOC,MAAOD,EAAMC,MAAOC,SAAUF,EAAME,aCapDC,EAhBI,SAACH,GACnB,OACC,0BAAMI,SAAUJ,EAAMI,UACpB,sCACQ,2BAAOH,MAAOD,EAAMK,KAAMH,SAAUF,EAAMM,gBAElD,wCACU,2BAAOL,MAAOD,EAAMO,OAAQL,SAAUF,EAAMQ,kBAEtD,6BACE,4BAAQC,KAAK,UAAb,UCMSC,EAhBC,SAACV,GACf,OACE,6BACGA,EAAMW,QAAQC,KAAI,SAAAC,GAAM,OACvB,yBAAKC,IAAKD,EAAOR,MACdQ,EAAOR,KADV,KACkBQ,EAAON,OADzB,OAGE,4BAAQQ,QAAS,kBAAMf,EAAMgB,oBAAoBH,KAAjD,gBCKKI,EAXM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC/B,OAAID,GAAWC,EAEX,yBAAKC,UAAWD,GACbD,GAIA,M,gBCVHG,EAAU,eAkBD,EAhBA,WACb,OAAOC,IAAMC,IAAIF,IAeJ,EAZA,SAAAG,GACb,OAAOF,IAAMG,KAAKJ,EAASG,IAWd,EARA,SAACE,EAAIF,GAClB,OAAOF,IAAMK,IAAN,UAAaN,EAAb,YAAwBK,GAAMF,IAOxB,EAJI,SAAAE,GACjB,OAAOJ,IAAMM,OAAN,UAAgBP,EAAhB,YAA2BK,KC0HrBG,EAnIH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRnB,EADQ,KACCoB,EADD,OAEgBD,mBAAS,IAFzB,mBAERE,EAFQ,KAECC,EAFD,OAGoBH,mBAAS,IAH7B,mBAGRI,EAHQ,KAGGC,EAHH,OAIoBL,mBAAS,IAJ7B,mBAIRM,EAJQ,KAIGC,EAJH,OAK0BP,mBAAS,CACjDZ,aAASoB,EAAWnB,WAAOmB,IANb,mBAKRC,EALQ,KAKMC,EALN,KASVC,EAAqB,SAACF,GAC1BC,EAAgBD,GAChBG,YAAW,WACTF,EAAgB,CACdtB,aAASoB,EAAWnB,WAAOmB,MAE5B,MAGCK,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACjBD,EAAME,iBACFC,EAFa,YAEKpC,KAClBqC,EAAUD,EAAYE,MAAK,SAAAC,GAAC,OAAIA,EAAE7C,KAAK8C,gBAAkBnB,EAAQmB,kBAHpD,oBAKXH,EAAQzC,SAAW2B,EALR,gBAMbO,EAAmB,CACjBvB,QAAQ,GAAD,OAAKc,EAAL,mCACPb,MAAO,UARI,2BAWTiC,OAAOC,QAAP,UAAkBrB,EAAlB,kDAXS,2CAaHsB,EAAwBN,EAAQtB,GAAI,CACxCrB,KAAM2B,EACNzB,OAAQ2B,IAfD,QAiBTqB,IACAd,EAAmB,CACjBvB,QAAQ,GAAD,OAAKc,EAAL,iCACPb,MAAO,YApBA,kDAuBTsB,EAAmB,CACjBvB,QAAQ,oBAAD,OAAsBc,GAC7Bb,MAAO,UAzBA,2DAgCQmC,EAAwB,CAC3CjD,KAAM2B,EACNzB,OAAQ2B,IAlCG,QAgCTsB,EAhCS,OAoCbT,EAAYU,KAAKD,EAASE,MAC1B3B,EAAWgB,GACXN,EAAmB,CACjBvB,QAAQ,GAAD,OAAKc,EAAL,+BACPb,MAAO,YAxCI,mDA2CbsB,EAAmB,CACjBvB,QAAQ,iBAAD,OAAmBc,EAAnB,KACPb,MAAO,UA7CI,kEAAH,sDAmDVoC,EAAS,uCAAG,4BAAAV,EAAA,sEACMS,IADN,OACV3C,EADU,OAEhBoB,EAAWpB,EAAQ+C,MAFH,2CAAH,qDAKfC,qBAAU,WACRJ,MACC,IAEH,IAYMK,EAAc,uCAAG,WAAO/C,GAAP,SAAAgC,EAAA,0DACjBO,OAAOC,QAAP,iBAAyBxC,EAAOR,KAAhC,MADiB,0CAGXiD,EAA4BzC,EAAOa,IAHxB,OAIjB6B,IACAd,EAAmB,CACjBvB,QAAQ,GAAD,OAAKL,EAAOR,KAAZ,iCACPc,MAAO,YAPQ,gDAUjBsB,EAAmB,CACjBvB,QAAQ,oBAAD,OAAsBL,EAAOR,KAA7B,+CACPc,MAAO,UAZQ,yDAAH,sDAkBd0C,EAAsC,KAArBzB,EAAU0B,OACVnD,EACAA,EAAQoD,QAAO,SAAAb,GAAC,OAAIA,EAAE7C,KAAK8C,cAAca,QAAQ5B,IAAc,KAEtF,OACE,6BACE,kBAAC,EAAD,CAAclB,QAASqB,EAAarB,QAASC,MAAOoB,EAAapB,QACjE,yCACA,kBAAC,EAAD,CAAQlB,MAAOmC,EAAWlC,SA9BH,SAAC0C,GAC1BP,EAAaO,EAAMqB,OAAOhE,UA8BxB,yCACA,kBAAC,EAAD,CACEG,SAAUuC,EACVtC,KAAM2B,EACNzB,OAAQ2B,EACR5B,aA5CmB,SAACsC,GACxBX,EAAWW,EAAMqB,OAAOhE,QA4CpBO,eAzCqB,SAACoC,GAC1BT,EAAaS,EAAMqB,OAAOhE,UA0CxB,uCACA,kBAAC,EAAD,CAASU,QAASkD,EAAgB7C,oBAAqB4C,MChI7DM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.893f1dd0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with <input value={props.value} onChange={props.onChange} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n return (\n  <form onSubmit={props.onSubmit}>\n    <div>\n      name: <input value={props.name} onChange={props.onNameChange}/>\n    </div>\n    <div>\n      number: <input value={props.number} onChange={props.onNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">Add</button>\n    </div>\n  </form>\n )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = (props) => {\n  return (\n    <div>\n      {props.persons.map(person => \n        <div key={person.name}>\n          {person.name}: {person.number}\n          &nbsp;\n          <button onClick={() => props.onDeleteButtonClick(person)}>\n            Delete\n          </button>\n        </div>  \n      )}\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\nimport '.././index.css'\n\nconst Notification = ({ message, state }) => {\n  if (message && state) {\n    return (\n      <div className={state}>\n        {message}\n      </div>\n    )\n  }\n  return null\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newPerson => {\n  return axios.post(baseUrl, newPerson)\n}\n\nconst update = (id, newPerson) => {\n  return axios.put(`${baseUrl}/${id}`, newPerson)\n}\n\nconst deleteById = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n  getAll, create, update, deleteById\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport PhonebookService from './PhonebookService'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')  \n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notification, setNotification ] = useState({\n    message: undefined, state: undefined\n  })\n\n  const notificationHelper = (notification) => {\n    setNotification(notification)\n    setTimeout(() => {\n      setNotification({\n        message: undefined, state: undefined\n      })\n    }, 5000)\n  }\n\n  const addContact = async (event) => {\n    event.preventDefault()\n    let personsCopy = [...persons]\n    let isExist = personsCopy.find(p => p.name.toLowerCase() === newName.toLowerCase())\n    if (isExist) {\n      if (isExist.number === newNumber) {\n        notificationHelper({\n          message: `${newName} is already added to phonebook.`,\n          state: 'error'\n        })\n      } else {\n        if (window.confirm(`${newName} is already in the phonebook, replace number?`)) {\n          try {\n            await PhonebookService.update(isExist.id, {\n              name: newName,\n              number: newNumber\n            })\n            fetchData()\n            notificationHelper({\n              message: `${newName} is updated in the phonebook.`,\n              state: 'success'\n            })\n          } catch (err) {\n            notificationHelper({\n              message: `Failed to update ${newName}`,\n              state: 'error'\n            })\n          }\n        }\n      }\n    } else {\n      try {\n        let response = await PhonebookService.create({\n          name: newName,\n          number: newNumber\n        })\n        personsCopy.push(response.data)\n        setPersons(personsCopy)\n        notificationHelper({\n          message: `${newName} is added in the phonebook.`,\n          state: 'success'\n        })\n      } catch (err) {\n        notificationHelper({\n          message: `Failed to add ${newName}.`,\n          state: 'error'\n        })\n      }\n    }\n  }\n\n  const fetchData = async () => {\n    const persons = await PhonebookService.getAll()\n    setPersons(persons.data)\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleDeletion = async (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      try {\n        await PhonebookService.deleteById(person.id)\n        fetchData()\n        notificationHelper({\n          message: `${person.name} is deleted in the phonebook.`,\n          state: 'success'\n        })\n      } catch (err) {\n        notificationHelper({\n          message: `Failed to delete ${person.name}. Refresh to get the latest phonebook list.`,\n          state: 'error'\n        })\n      }\n    }\n  }\n\n  const displayPersons = newFilter.trim() === '' ?\n                         persons : \n                         persons.filter(p => p.name.toLowerCase().indexOf(newFilter) > -1)\n\n  return (\n    <div>\n      <Notification message={notification.message} state={notification.state} />\n      <h2>Phonebook</h2>\n      <Filter value={newFilter} onChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm \n        onSubmit={addContact}\n        name={newName}\n        number={newNumber}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={displayPersons} onDeleteButtonClick={handleDeletion}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}